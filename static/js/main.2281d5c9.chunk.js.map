{"version":3,"sources":["components/SearchBar.jsx","components/ImageGalleryItem.jsx","components/ImageGallery.jsx","components/Button.jsx","components/Modal.jsx","components/FinderAPI.jsx","App.js","index.js"],"names":["SearchBar","onFormSubmit","useState","value","setValue","className","onSubmit","e","preventDefault","type","autoComplete","autoFocus","placeholder","onChange","target","ImageGalleryItem","imageData","onShowModal","onClick","largeImageURL","tags","src","webformatURL","alt","ImageGallery","children","map","image","index","LoadMoreButton","onFatchImages","Modal","picture","description","onCloseModal","useEffect","onKeyup","key","window","addEventListener","removeEventListener","event","currentTarget","axios","defaults","baseURL","params","image_type","orientation","per_page","getApi","query","page","get","then","data","App","images","setImagesList","isLoading","setIsLoading","currentPage","setCurrentPage","searchQuery","setSearchQuery","showModal","setShowModal","setDescription","setPicture","handleShowModal","img","prevState","handleShowPictures","hits","catch","error","console","log","finally","scrollTo","top","document","documentElement","scrollHeight","behavior","length","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.2281d5c9.chunk.js","sourcesContent":["import { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nconst SearchBar = ({ onFormSubmit }) => {\r\n  const [value, setValue] = useState('');\r\n\r\n  const handleSabmit = e => {\r\n    e.preventDefault();\r\n\r\n    onFormSubmit(value);\r\n    setValue('');\r\n  };\r\n\r\n  const handleInputChange = e => {\r\n    setValue(e.target.value);\r\n  };\r\n\r\n  return (\r\n    <header className=\"Searchbar\">\r\n      <form className=\"SearchForm\" onSubmit={handleSabmit}>\r\n        <button type=\"submit\" className=\"SearchForm-button\">\r\n          <span className=\"SearchForm-button-label\">Search</span>\r\n        </button>\r\n\r\n        <input\r\n          value={value}\r\n          className=\"SearchForm-input\"\r\n          type=\"text\"\r\n          autoComplete=\"off\"\r\n          autoFocus\r\n          placeholder=\"Search images and photos\"\r\n          onChange={handleInputChange}\r\n        />\r\n      </form>\r\n    </header>\r\n  );\r\n};\r\n\r\nexport default SearchBar;\r\n\r\n// SearchBar.propTypes = {\r\n//   onFormSubmit: PropTypes.func.isRequired,\r\n// };\r\n","import PropTypes from 'prop-types';\r\n\r\nconst ImageGalleryItem = ({ imageData, onShowModal }) => {\r\n  return (\r\n    <li\r\n      onClick={() => onShowModal(imageData.largeImageURL, imageData.tags)}\r\n      className=\"ImageGalleryItem\"\r\n    >\r\n      <img\r\n        src={imageData.webformatURL}\r\n        alt={imageData.tags}\r\n        className=\"ImageGalleryItem-image\"\r\n      />\r\n    </li>\r\n  );\r\n};\r\n\r\nexport default ImageGalleryItem;\r\n\r\nImageGalleryItem.propTypes = {\r\n  onShowModal: PropTypes.func.isRequired,\r\n  imageData: PropTypes.object.isRequired,\r\n};\r\n","import ImageGalleryItem from './ImageGalleryItem';\r\n\r\nconst ImageGallery = ({ children, onShowModal }) => {\r\n  return (\r\n    <ul className=\"ImageGallery\">\r\n      {children.map((image, index) => (\r\n        <ImageGalleryItem\r\n          key={index}\r\n          imageData={image}\r\n          onShowModal={onShowModal}\r\n        />\r\n      ))}\r\n    </ul>\r\n  );\r\n};\r\nexport default ImageGallery;\r\n","import PropTypes from 'prop-types';\r\nconst LoadMoreButton = ({ onFatchImages }) => {\r\n  return (\r\n    <>\r\n      <button className=\"loadMoreButton\" onClick={onFatchImages} type=\"button\">\r\n        <span>Load more</span>\r\n      </button>\r\n    </>\r\n  );\r\n};\r\nexport default LoadMoreButton;\r\n\r\nLoadMoreButton.propTypes = {\r\n  onFatchImages: PropTypes.func.isRequired,\r\n};\r\n","import { useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Modal = ({ picture, description = 'image', onCloseModal }) => {\r\n  const handleCloseModal = event => {\r\n    if (event.target === event.currentTarget) onCloseModal();\r\n  };\r\n\r\n  useEffect(() => {\r\n    function onKeyup(e) {\r\n      if (e.key === 'Escape') {\r\n        onCloseModal();\r\n      }\r\n    }\r\n    window.addEventListener('keyup', onKeyup);\r\n    return () => window.removeEventListener('keyup', onKeyup);\r\n  });\r\n\r\n  return (\r\n    <div className=\"Overlay\" onClick={handleCloseModal}>\r\n      <div className=\"Modal\">\r\n        <img src={picture} alt={description} />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Modal;\r\n\r\nModal.propTypes = {\r\n  picture: PropTypes.string.isRequired,\r\n  description: PropTypes.string,\r\n  onCloseModal: PropTypes.func.isRequired,\r\n};\r\n","import axios from 'axios';\r\n\r\naxios.defaults.baseURL = 'https://pixabay.com/api/';\r\naxios.defaults.params = {\r\n  key: '16958018-5870f5be4b9a0ed4e53bb3835',\r\n  image_type: 'photo',\r\n  orientation: 'horizontal',\r\n  per_page: 12,\r\n};\r\n\r\nconst getApi = (query, page) =>\r\n  axios.get(`?q=${query}&page=${page}`).then(({ data }) => data);\r\n// axios\r\n//   .get(\r\n//     `https:pixabay.com/api/?q=${query}&page=${page}&key=16958018-5870f5be4b9a0ed4e53bb3835&image_type=photo&orientation=horizontal&per_page=12`,\r\n//   )\r\n//   .then(({ data }) => data);\r\nexport default getApi;\r\n","import { useState, useEffect } from 'react';\nimport SearchBar from './components/SearchBar';\nimport ImageGallery from './components/ImageGallery';\nimport LoadMoreButton from './components/Button';\nimport Modal from './components/Modal';\n\nimport getApi from './components/FinderAPI.jsx';\n\nconst App = () => {\n  const [images, setImagesList] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [currentPage, setCurrentPage] = useState(1);\n  const [searchQuery, setSearchQuery] = useState('');\n  const [showModal, setShowModal] = useState(false);\n  const [description, setDescription] = useState('');\n  const [picture, setPicture] = useState('');\n\n  const handleChangeQuery = value => {\n    setIsLoading(true);\n    setCurrentPage(1);\n    setImagesList([]);\n    setSearchQuery(value);\n    handleShowPictures(value);\n  };\n\n  const handleShowModal = (img, alt) => {\n    if (!showModal) {\n      setDescription(prevState => alt);\n      setPicture(prevState => img);\n      setShowModal(true);\n    } else {\n      setShowModal(false);\n    }\n  };\n\n  const handleLoadMoreImg = () => {\n    setCurrentPage(prevState => prevState + 1);\n  };\n\n  const handleScroll = () => {\n    window.scrollTo({\n      top: document.documentElement.scrollHeight,\n      behavior: 'smooth',\n    });\n  };\n\n  const handleShowPictures = searchQuery => {\n    setIsLoading(true);\n    getApi(searchQuery, currentPage)\n      .then(({ hits }) => {\n        setImagesList(prevState => [...prevState, ...hits]);\n      })\n      .then(() => setIsLoading(false))\n      .catch(error => {\n        console.log(error);\n      })\n      .finally(() => {\n        handleScroll();\n      });\n  };\n\n  useEffect(() => {\n    if (searchQuery === '' && currentPage === 1) {\n      return;\n    }\n\n    handleShowPictures(searchQuery);\n  }, [currentPage]);\n\n  return (\n    <div>\n      <SearchBar onFormSubmit={handleChangeQuery} />\n      <ImageGallery onShowModal={handleShowModal}>{images}</ImageGallery>\n      {images.length > 0 && !isLoading && (\n        <LoadMoreButton onFatchImages={handleLoadMoreImg} />\n      )}\n      {showModal && (\n        <Modal\n          picture={picture}\n          description={description}\n          onCloseModal={handleShowModal}\n        />\n      )}\n    </div>\n  );\n};\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport 'modern-normalize/modern-normalize.css';\nimport './index.css';\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}